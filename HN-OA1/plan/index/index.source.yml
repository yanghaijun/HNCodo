getData_control2_SwOSql: |
  if (!elem) {
    return;
  }
doAction_uiControl2_cTk4Do: |
  if (data.eventType == 'click') {
    elem.querySelector(".icon-more") && elem.querySelector(".icon-more").click();
  }
getTemplate_uiControl2_cTk4Do: "module.exports = React.createClass({\n\tcomponentDidMount(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n      eventType:'click'\n      })\n    };\n    ysp.appMain.showLoading();\n    setTimeout(function(){\n      ysp.appMain.hideLoading();\n    },3000);\n\t},\n\tcomponentDidUpdate(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n      eventType:'click'\n      })\n    };\n    ysp.appMain.showLoading();\n    setTimeout(function(){\n      ysp.appMain.hideLoading();\n    },3000);\n\t},\n  // handlerClick(){\n  //   var handler = this.props.customHandler;\n  //   if(handler){\n  //     handler({\n  //       eventType:'click'\n  //     })\n  //   }\n  // },\n  render: function() {\n    return (\n      <div>\n      </div>\n    )\n  }\n});"
getData_control9_QFsNKk: |
  ;if (!elem) {
    return;
  }
  var data = {
    title: [],
    flag: []
  };
  var trs = elem.querySelectorAll("tr");
  for (var i = 0; i < trs.length; i++) {
    var a = [];
    var title = trs[i].querySelectorAll("td") && trs[i].querySelectorAll("td")[2].textContent;
    var titles = trs[i].querySelectorAll("td") && trs[i].querySelectorAll("td")[3].textContent;
    var person = trs[i].querySelectorAll("td") && trs[i].querySelectorAll("td")[6].textContent;
    var time = trs[i].querySelectorAll("td") && trs[i].querySelectorAll("td")[7].textContent;

    if (title == '测试收文流程' || title == '测试发文流程' || title == '测试签报' || title == '测试部门会议纪要' || title == '测试通知公告' || title == '测试部门发文' || title == '测试人员变动' || title == '测试公司会议纪要' || title == '测试考勤审批' || title == '测试请假审批' || title == '付款测试' || title == '测试工作联系单' || title == '测试会议通知' || title == '测试车辆管理' || title == '测试信息变更' || title == '内发测试') {
      a.push(titles);
      a.push(person);
      a.push(time);
      data.title.push(a);
    }
  }
  var trs = elem.querySelectorAll("tr");
  for (var i = 1; i < trs.length; i++) {
    //   var title = trs[i].querySelectorAll("td") && trs[i].querySelectorAll("td")[0].className;
    //   if ("" == title) {
    //     data.flag.push(false);
    //   } else {
    //     data.flag.push(true);
    //   }
    data.flag.push(false);
  }
  return data;
doAction_uiControl9_fSWe0r: |
  if (data.eventType == "click") {
    //ysp.appMain.showLoading();
    var index = parseInt(data.customData);
    var a = [];
    var trs = elem.querySelectorAll("tr");

    for (var i = 0; i < trs.length; i++) {
      var title = trs[i].querySelectorAll("td") && trs[i].querySelectorAll("td")[2].textContent;

      if (title == '测试收文流程' || title == '测试发文流程' || title == '测试签报' || title == '测试部门会议纪要' || title == '测试通知公告' || title == '测试部门发文' || title == '测试人员变动' || title == '测试公司会议纪要' || title == '测试考勤审批' || title == '测试请假审批' || title == '付款测试' || title == '测试工作联系单' || title == '测试会议通知' || title == '测试车辆管理' || title == '测试信息变更' || title == '内发测试') {
        a.push(trs[i]);
      }
    }

    a[index].querySelectorAll("td")[3].querySelector("a").click(); //elem.querySelectorAll("tr")[index].querySelectorAll("td")[1].querySelector("a").click();
  }
getTemplate_uiControl9_fSWe0r: "module.exports = React.createClass({\n  componentWillMount(){\n    ysp.appMain.showLoading();\n    setTimeout(function(){\n      ysp.appMain.hideLoading();\n    },1000);\n    var elem = this.refs.toTop&&this.refs.toTop.ownerDocument.querySelector(\".view-wrapper\");\n    if(elem){\n      setTimeout(function(){\n        elem.scrollTop=0;\n      },500)\n    }\n  },\n  componentDidMount(){\n    ysp.appMain.showLoading();\n    setTimeout(function(){\n      ysp.appMain.hideLoading();\n    },500);\n    var elem = this.refs.toTop&&this.refs.toTop.ownerDocument.querySelector(\".view-wrapper\");\n    if(elem){\n      setTimeout(function(){\n        elem.scrollTop=0;\n      },500)\n    }\n  },\n  componentDidUpdate(){\n    ysp.appMain.showLoading();\n    setTimeout(function(){\n      ysp.appMain.hideLoading();\n    },500);\n    var elem = this.refs.toTop&&this.refs.toTop.ownerDocument.querySelector(\".view-wrapper\");\n    if(elem){\n      setTimeout(function(){\n        elem.scrollTop=0;\n      },500)\n    }\n  },\n  handlerClick(e){\n    var classTitle = e.target.className;\n    var dom;\n    if(\"ysp-index-db-content-title\" == classTitle || \"ysp-index-db-content-ping\" == classTitle){\n      dom = e.target.parentElement;\n    } else if(\"ysp-index-title\" == classTitle || \"ysp-index-time-person\" == classTitle || \"ysp-index-db-content-ping-red\" == classTitle || \"ysp-index-db-content-ping-clue\" == classTitle){\n      dom = e.target.parentElement.parentElement;\n    } else if(\"ysp-index-person\" == classTitle || \"ysp-index-time\" == classTitle){\n      dom = e.target.parentElement.parentElement.parentElement;\n    }\n    var title = dom.dataset.index;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'click',\n        data:title\n      })\n    }\n  },\n  render: function() {\n    var scorllH =document.body.clientHeight-50+'px';\n    var dataTitle = this.props.customData && this.props.customData.title;\n    var dataFlag = this.props.customData && this.props.customData.flag;\n    var that = this;\n    return (\n      <div className=\"ysp-index-db\" ref= \"toTop\" style={{'height':scorllH,'overflow':'scroll'}}>\n        {\n          dataTitle && dataTitle.map(function(value,key){\n            return(\n              <div className=\"ysp-index-db-content\" data-index = {key} \n                onClick={that.handlerClick.bind(that)}>\n                <div className=\"ysp-index-db-content-ping\">\n                  <span className={dataFlag[key] == true ? \"ysp-index-db-content-ping-red\"\n                    : \"ysp-index-db-content-ping-clue\"}></span>\n                \tOA\n                </div>\n                <div className=\"ysp-index-db-content-title\">\n                \t<div className=\"ysp-index-title\">\n                \t {dataTitle[key][0]}\n                  </div>\n                  <div className=\"ysp-index-time-person\">\n                    <span className=\"ysp-index-person\">{dataTitle[key][1]}</span>\n                    <span className=\"ysp-index-time\">{dataTitle[key][2]}</span>\n                  </div>\n                </div>\n                \n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n});"
getData_control10_igaWMQ: >
  if (!elem) {
    return;
  }

  var data = {
    flag1: [],
    flag2: [],
    flag3: [],
    flag4: []
  };

  var tds = elem.querySelector("tr") &&
  elem.querySelector("tr").querySelectorAll("td");

  var oneClassName = tds[2].querySelector("a").className;

  var twoClassName = tds[3].querySelector("a").className;

  var threeClassName = tds[7].querySelector("a").className;

  var fourClassName = tds[8].querySelector("a").className;

  if (oneClassName.indexOf("l-btn-plain-disabled") > -1) {
    data.flag1.push(false);
  } else {
    data.flag1.push(true);
  }

  if (twoClassName.indexOf("l-btn-plain-disabled") > -1) {
    data.flag2.push(false);
  } else {
    data.flag2.push(true);
  }

  if (threeClassName.indexOf("l-btn-plain-disabled") > -1) {
    data.flag3.push(false);
  } else {
    data.flag3.push(true);
  }

  if (fourClassName.indexOf("l-btn-plain-disabled") > -1) {
    data.flag4.push(false);
  } else {
    data.flag4.push(true);
  }

  return data;
doAction_uiControl10_p96g1g: >
  var types = data.eventType;

  var tds = elem.querySelector("tr") &&
  elem.querySelector("tr").querySelectorAll("td");

  if (types == 'one') {
    tds && tds[2].querySelector("a").click();
  }

  if (types == 'two') {
    tds && tds[3].querySelector("a").click();
  }

  if (types == 'three') {
    tds && tds[7].querySelector("a").click();
  }

  if (types == 'four') {
    tds && tds[8].querySelector("a").click();
  }
getTemplate_uiControl10_p96g1g: "module.exports = React.createClass({\n  handlerOne(){\n    ysp.appMain.showLoading();\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'one'\n      })\n    }\n  },\n  handlerTwo(){\n    ysp.appMain.showLoading();\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'two'\n      })\n    }\n  },\n  handlerThree(){\n    ysp.appMain.showLoading();\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'three'\n      })\n    }\n  },\n  handlerFour(){\n    ysp.appMain.showLoading();\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'four'\n      })\n    }\n  },\n  render: function() {\n    var data = this.props.customData;\n    return (\n      <div className = \"ysp-pages\">\n        <div>\n          <span className = {data && data.flag1[0] == true ? \"oneGo\" : \"onNoGo\"} \n            onClick={this.handlerOne.bind(this)}></span>\n          <span className = {data && data.flag2[0] == true ? \"twoGo\" : \"twoNoGo\"} \n            onClick={this.handlerTwo.bind(this)}></span>\n        </div>\n        <div>\n        \t<span className = {data && data.flag3[0] == true ? \"threeGo\" : \"threeNoGo\"} \n            onClick={this.handlerThree.bind(this)}></span>\n          <span className = {data && data.flag4[0] == true ? \"fourGo\" : \"fourNoGo\"} \n            onClick={this.handlerFour.bind(this)}></span>\n        </div>\n      </div>\n    )\n  }\n});"
