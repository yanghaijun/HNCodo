- name: 头部
  getTemplate: |-
    module.exports = React.createClass({
      componentDidMount(){
        var elem = this.refs.toTop.ownerDocument.querySelector(".view-wrapper");
        setTimeout(function(){
          elem.scrollTop=0;
        },500)
      },
      handlerClick(){
        var handler = this.props.customHandler;
        if(handler){
          handler({
            eventType:"click"
          })
        }
      },
      render: function() {
        var data = this.props.customData || [];
        return (
          <div className="ysp-header" ref='toTop'>
            <div onClick={this.handlerClick.bind(this)}></div>
            <div>
              {
                data && data[0]
              }
            </div>
            
          </div>
        )
      }
    });
  getData: |
    var data = [];
    var h1 = elem.querySelector("h1").textContent;
    data.push(h1);
    return data;
  doAction: |
    if (data.eventType == "click") {
      var lis = elem.querySelectorAll("li");
      var index;

      for (var i = 0; i < lis.length; i++) {
        if (" 退出 " == lis[i].textContent) {
          index = i;
        }
      }

      elem.querySelectorAll("li") && elem.querySelectorAll("li")[index].querySelector("a").click();
      var elem = elem.ownerDocument;
      var dialog = $(elem).find('.ui_state_lock').find('table').find('.ui_buttons').find('input').eq(1);

      if (dialog.val() == '不保存') {
        dialog.click();
      }
    }
- name: 标题
  getTemplate: |-
    module.exports = React.createClass({
      render: function() {
        var data = this.props.customData;
        return (
          <div className="ysp-content-top">
            {data}
          </div>
        )
      }
    });
  getData: >
    var data = [];

    var title = elem.querySelector("input") ? elem.querySelector("input").value
    : elem.textContent;

    data.push(title);

    return data;
  doAction: ''
- name: 内容
  getTemplate: "import {Component} from 'react';\n\nexport default class extends Component{\n  constructor(){\n    super();\n    this.state={\n      flag:true,\n      flag1:false,\n      flag2:false,\n      flag3:false,\n      flag4:false,\n      commitModal:false,\n      renderModal:true,\n      flowIndx:'a',\n      peopleFLOW:0//选人部分的显示隐藏\n    }\n  }\n  handlerNR(e){\n    var that = this;\n    that.setState({\n      flag:true,\n      flag1:false,\n      flag2:false,\n    })\n  }\n  handlerFJ(e){\n    var that = this;\n    that.setState({\n      flag:false,\n      flag1:true,\n      flag2:false,\n    })\n  }\n  handlerLC(e){\n    var that = this;\n    that.setState({\n      flag:false,\n      flag1:false,\n      flag2:true,\n    })\n  }\n\thandle(data,eventType) {\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({data,eventType});\n    }\n  }\n  handlerPZ(){\n    var that = this;\n    that.setState({\n      flag3:true\n    })\n  }\n  handlerCY(){\n    var that = this;\n    that.setState({\n      flag3:false\n    })\n  }\n  handleryijian(e){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'yijian',\n        data:e.target.dataset.index\n      })\n    }\n    this.setState({\n      flag3:false\n    })\n  }\n  handlerZC(){\n    var handler = this.props.customHandler;\n    ysp.appMain.showLoading();\n    if(handler){\n      handler({\n        eventType:'ZC'\n      })\n    }\n  }\n  handlerTH(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'TH'\n      })\n    }\n    this.setState({\n      flag4:true\n    })\n  }\n  handlerTHClose(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"THClose\"\n      })\n    }\n    this.setState({\n      flag4:false\n    })\n  }\n  handlerTHTitle(e){\n    var classTitle = e.target.className;\n    var dom;\n    if(\"ysp-contentSW-thTitleFitst\" == classTitle || \"ysp-contentSW-thTitleSecond\" == classTitle){\n      dom = e.target.parentElement;\n    } else if(\"ysp-contentSW-thTitle\" == classTitle){\n      dom = e.target;\n    }\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"THTitle\",\n        data:dom.dataset.index\n      })\n    }\n  }\n  textareaChange(e){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"textareaChange\",\n        data:e.target.value\n      })\n    }\n  }\n  handlerPeople(e){\n    var handler = this.props.customHandler;\n    var target = e.target;\n    if(handler){\n      handler({\n        eventType:\"peopleChioseClick\"\n      })\n    }\n  }\n  handlerfujian(e){\n    var classTitle = e.target.className;\n    var dom;\n    if(\"classTypeP\" == classTitle || \"classTypeW\" == classTitle || \"classTypeX\" == classTitle || \"classTypeo\" == classTitle || \"classTypeText\" == classTitle){\n      dom = e.target.parentElement;\n    } else {\n      dom = e.target;\n    }\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'fujian',\n        data:{\n          url:dom.dataset.url,\n          cookies: dom.dataset.cookies,\n          text: dom.dataset.text\n        }\n      })\n    }\n  }\n  commit(){\n    var me = this,data=this.props.customData;\n    return <div className='D_choiseFlow'>\n      <div className=\"ysp-header\" >\n        <div onClick={()=>{\n            this.setState({...this.state,commitModal:false,renderModal:true})\n          }}></div>\n        <div>请选择流向</div>\n       </div>\n    \t<div className='D_flowList' style={{display:me.state.peopleFLOW==0?'block':'none'}}>\n      \t{data&&data.commitLZ&&data.commitLZ.map(function(d,t){\n          return (<li className={me.state.flowIndx==t?'changC':''} onClick={()=>{\n              var title = d.textC;\n              if(title != '送发文复核' && title != '送发文封存'){\n                me.handle(t,'Liclick')  \n              \tme.setState({flowIndx:t,peopleFLOW:'a'})\n              } else {\n                alert('此功能需要安装插件，请您从PC端操作此流程！！');\n                return false;\n              }\n            }}><span>{d.textC}</span><span style={{display:me.state.flowIndx==t?'block':'none'}}>√</span></li>)\n        })}\n      </div>\n      <div className='D_chiosePeople' style={{display:me.state.peopleFLOW==0?'none':'block'}}>  \n      \t<div className=\"ysp-header\" >\n        <div onClick={()=>{\n            this.setState({...this.state,peopleFLOW:0})\n            me.handle('','closeChiosep')\n          }}></div>\n        <div style={{textAlign:'center'}}>请选择办理人</div>\n        <div style={{paddingRight:'15px'}} onClick = {me.handlerPeople.bind(me)}>确定</div>\n       </div>\n \t\t\t\t<div className='treeBody' style={{display:data.treeBar[0]?'block':'none'}}>\n          {data&&data.treeBar[0]&&data.treeBar.map(function(d,t){\n            return (\n              <div>\n                <li onClick={()=>{\n                  me.handle(t,'flowTitle')\n                }} style={{display:d.dis}} indexs={d.indx}>\n                  <span style={{color:'blue'}}>+</span>\n                  {d.title}\n                </li>\n              \t<div>\n                  {d.array&&d.array.map(function(q,l){\n                    return (<li className='nocolor' onClick={(e)=>{\n                          me.handle({data1:l,data2:d.indx},'flowTitleChild');\n                          var target = e.target;\n                          if(target.getAttribute('class')=='nocolor') {\n                            target.setAttribute('class','blueColor');\n                          }else {\n                            target.setAttribute('class','nocolor');\n                          }\n                        }} style={{display:q.dis}} indexs={q.indx}>{q.text}</li>)\n                  })}\n                </div>\n                \n                <div>\n                \t{\n                    d.array1 && d.array1.map(function(dd,vv){\n                      return(\n                        <div>\n                        \t<li onClick={()=>{\n                            me.handle(t,'flowTitles')\n                          }} style={{display:dd.dis}} indexs={dd.indx}>\n                            <span style={{color:'blue'}}>+</span>\n                            {dd.title}\n                          </li>\n                          \n                          <div style={{'paddingLeft':'40px'}}>\n                            {d.array2&&d.array2.map(function(qq,ll){\n                              return (\n                                <li className='nocolor' onClick={(e)=>{\n                                    me.handle({data1:ll,data2:dd.indx},'flowTitleChilds');\n                                    var target = e.target;\n                                    if(target.getAttribute('class')=='nocolor') {\n                                      target.setAttribute('class','blueColor');\n                                    }else {\n                                      target.setAttribute('class','nocolor');\n                                    }\n                                  }} style={{display:qq.dis}} indexs={qq.indx}>\n                                  {qq.text}\n                                </li>\n                              )\n                            })}\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>)\n          })}\n        </div>\n        <div id=\"tres\" style={{'height':'100%'}}>\n          {data&&data.selectApars && data.selectApars.length >1 ?\n            <div className='treeBody'>\n            \t{\n                data.selectApars.map(function(d,t){\n                  return <li className='pTre' onClick={(e)=>{\n                        me.handle(t,'radiosClick')\n                      }}><span style={{display:d.type=='P'?'none':'block'}} className={d.trueFalse=='true'?'changeRadioB':'changeRadio'}></span>{d.text}</li>\n                })\n              }\n            </div> : \"\"\n           }\n          \n          <div className={data.selectApars.length >1 && data.selectApar.length >0 ? 'treeStyle' : ''}>\n          \t{data&&data.selectApar&&data.selectApar.map(function(d,t){\n            return <li className='pTre' onClick={(e)=>{\n                  me.handle(t,'radioClick')\n                }}><span style={{display:d.type=='P'?'none':'block'}} className={d.trueFalse=='true'?'changeRadioB':'changeRadio'}></span>{d.text}</li>\n          })}\n          </div>\n          \n          {\n            data && data.textArr && (data.textArr.bm.length > 0 || data.textArr.ry.length >0) ?\n              <div style={{\"background\":\"#fff\",\"height\":\"30%\",\"overflow\":\"auto\",\"padding\":\"15px\"}}>\n                <div style={{'borderBottom':'2px solid #eeeeee','padding':'3px 0px'}}>\n                \t<span style={{\"color\":\"#0a73cc\"}}>类型：</span>\n                  <span>{data && data.textArr && data.textArr.lx[0]}</span>\n                </div>\n                <div style={{'borderBottom':'2px solid #eeeeee','padding':'3px 0px'}}>\n                  <span style={{\"color\":\"#0a73cc\"}}>部门：</span>\n                  {\n                    data && data.textArr && data.textArr.bm.map(function(d,i){\n                      return(\n                        <span>{d}</span>\n                      )\n                    })\n                  }\n                </div>\n                <div>\n                  <span style={{\"color\":\"#0a73cc\"}}>人员：</span>\n                  {data && data.textArr && data.textArr.ry.map(function(d,i){\n                    return(\n                      <span>{d}</span>\n                    )\n                  })}\n                </div>\n              </div> : \"\"\n            }\n        </div>\n      </div>\n    </div>\n  }\n  apiRender(){\n    var scorllH =document.body.clientHeight-200+'px';\n    var scorllY =document.body.clientHeight-100+'px';\n    var _this=this,data=this.props.customData\n    return(\n    \t<div>\n        <div style={{'height':scorllH,'overflow':'scroll'}}>\n          <div className=\"ysp-content-header\">\n            <span className={this.state.flag == true ? \"ysp-content-header-button\" : \"\"} onClick={this.handlerNR.bind(this)}>内容</span>\n            <span className={this.state.flag1 == true ? \"ysp-content-header-button\" : \"\"} onClick={this.handlerFJ.bind(this)}>附件</span>\n            <span className={this.state.flag2 == true ? \"ysp-content-header-button\" : \"\"}onClick={this.handlerLC.bind(this)}>流程</span>\n          </div>\n          <div className=\"ysp-content-body\">\n            {\n              this.state.flag == true ? \n                <div className=\"ysp-contentSW\">\n                  <div>\n                    <span>签发人</span>\n                    <span>{data&&data.content[0]}</span>\n                  </div>\n                  <div>\n                    <span>主办部门</span>\n                    <span>{data&&data.content[1]}</span>\n                  </div>\n                  <div>\n                    <span>主送单位</span>\n                    <span>{data&&data.content[2]}</span>\n                  </div>\n                  <div>\n                    <span>抄送单位</span>\n                    <span>{data&&data.content[3]}</span>\n                  </div>\n                  <div>\n                    <span>拟稿人</span>\n                    <span>{data&&data.content[4]}</span>\n                  </div>\n                  <div>\n                    <span>日期</span>\n                    <span>{data&&data.content[5]}</span>\n                  </div>\n                  <div>\n                    <span>节点名称</span>\n                    <span>{data&&data.content[6]}</span>\n                  </div>\n                  <div>\n                    <span>代办类型</span>\n                    <span>{data&&data.content[7]}</span>\n                  </div>\n                  <div>\n                    <span>意见</span>\n                    <span style={{\"border-bottom\": \"0px\"}}>\n                      <ATextarea onChange={this.textareaChange.bind(this)}\n                        value={data&&data.content[8]}></ATextarea>\n                    </span>\n                  </div>\n                  <div>\n                    <span></span>\n                    <span className=\"ysp-contentSW-button\" onClick={this.handlerPZ.bind(this)}>\n                      典型批注\n                    </span>\n                  </div> \n                </div>\n                : this.state.flag1 == true ? \n                <div className='D_fujian'>\n                  {data&&data.fujian&&data.fujian.map(function(d,l){\n                    if(d.text=='暂无附件') {\n                      return <div className='D_zanwuFJ'>\n                        {d.text}\n                      </div>\n                    }else {\n                      var typeP,classType\n                      if(d.typeP=='docx') {\n                        typeP='W'\n                        classType='classTypeW'\n                      }else if(d.typeP=='ppt') {\n                        typeP='P'\n                        classType='classTypeP'\n                      }else if(d.typeP=='xls') {\n                        typeP='X'\n                        classType='classTypeX'\n                      }else {\n                        classType='classTypeo'\n                      }\n                      return (\n                        <div className='D_zanwuFJT' onClick={_this.handlerfujian.bind(_this)}\n                          data-url={d.url} data-cookies={d.cookies} data-text={d.text}>\n                          <span className={classType}>{typeP}</span>\n                          <div className=\"classTypeText\">附件：{d.text}</div>\n                        </div>)\n                    }\n                  })}\n                 </div>\n                : this.state.flag2 == true ? \n                <div className='D_LC'>\n                  {data&&data.liucheng&&data.liucheng.map(function(d,t){\n                    if(d.text=='暂无流程') {\n                      return <div className='D_zanwuLC'>{d.text}</div>\n                    }else {\n                     return (<div className='D_liucheng'>\n                      <div>\n                        <span></span>\n                        <span className={data.liuchengNUM[0].num!=t?'d_xian':'abc'}></span>\n                      </div>\n                      <div>\n                        <div>{d.text}</div>\n                        <div>\n                          <p><span></span><span>{d.content}</span></p>\n                          <p><span></span><span>{d.day}</span></p>\n                        </div>\n                      </div>\n                    </div>)\n                    }\n                  })}\n                </div> : ''\n            }\n          </div>\n        </div>\n        {\n          data&&data.but.length == 2 ? \n            <div style={{'background':'#fff','padding':'5px'}}>\n              <div className=\"ysp-content-bottomWC\">\n                <span onClick={()=>{\n                  if(data&&data.content[8]!=''){\n                    this.setState({...this.state,commitModal:true,renderModal:false})\n                  }else {\n                    alert('请填写办理意见')\n                  }\n            }}>完成</span>\n              </div>\n              <div className=\"ysp-content-bottom\">\n              \t<span onClick={this.handlerZC.bind(this)}>暂存</span>\n              \t<span onClick={this.handlerTH.bind(this)}>退回</span>\n              </div>\n            </div> :\n            <div className=\"ysp-content-bottom\">\n            \t<span onClick={this.handlerZC.bind(this)}>暂存</span>\n            \t<span onClick={()=>{\n                if(data&&data.content[8]!=''){\n                      this.setState({...this.state,commitModal:true,renderModal:false})\n                    }else {\n                      alert('请填写办理意见')\n                    }\n              }}>完成</span>\n          \t</div>\n        }\n        {\n          this.state.flag3 == true ? \n            <div className=\"ysp-contentSW-yj\">\n              <div className=\"ysp-header\">\n                <div onClick={this.handlerCY.bind(this)}></div>\n                <div>常用意见</div>\n              </div>\n              <div style={{'height':scorllY,'overflow':'scroll'}}>\n              {\n                data && data.yijian.map(function(d,i){\n                  if(d=='常用意见暂无数据'){\n                    return(\n                  \t<div className=\"ysp-contentSW-yjtitle\">\n                      {d}\n                    </div>\n                  )\n                  }else {\n                    return(\n                  \t<div data-index = {i} onClick={_this.handleryijian.bind(_this)}\n                      className=\"ysp-contentSW-yjtitle\">\n                      {d}\n                    </div>\n                  )\n                  }\n                  \n                })\n              }\n             </div>\n            </div> : \"\"\n        }\n        \n        {\n          this.state.flag4 == true ?\n            <div className=\"ysp-contentSW-th\">\n            \t<div className=\"ysp-header\">\n                <div onClick={_this.handlerTHClose.bind(_this)}></div>\n                <div>退回信息</div>\n              </div>\n              <div style={{'height':scorllY,'overflow':'scroll'}}>\n              {\n                data && data.tuihuiTitle.map(function(d,i){\n                  return(\n                  \t<div className={data.tuihuiTitleFlag[i] ? \"ysp-contentSW-thTitle ysp-contentSW-thTitleColor\" : \"ysp-contentSW-thTitle\"} \n                      data-index={i} onClick={_this.handlerTHTitle.bind(_this)}>\n                      <span className=\"ysp-contentSW-thTitleFitst\">{d[0]}</span>\n                      <span className=\"ysp-contentSW-thTitleSecond\">({d[1]})</span>\n                    </div>\n                  )\n                })\n              }\n             </div>\n            </div> : \"\"\n        }\n      </div>\n    )\n  }\n  render() {\n    var _this=this;\n    return <div ref=\"toTop\">{_this.state.renderModal?_this.apiRender():_this.commit()}</div>\n  }\n}"
  getData: >
    if (!elem) {
      return;
    }

    var data = {
      content: [],
      fujian: [],
      liucheng: [],
      liuchengNUM: [],
      commitLZ: [],
      treeBar: [],
      selectApar: [],
      selectApars: [],
      textArr: {
        lx: [],
        bm: [],
        ry: []
      },
      yijian: [],
      but: [],
      tuihuiTitle: [],
      tuihuiTitleFlag: []
    };

    var qfr = "";

    var zbbm = "";

    var zsdw = "";

    var csdw = "";

    var ngr = "";

    var rq = "";

    var jdmc = "";

    var dblx = "";

    var yj = "";

    var a = [];

    var b = [];

    var c = [];

    var d = [];

    var e = [];

    var dts = elem.ownerDocument.querySelectorAll("dt");

    for (var i = 0; i < dts.length; i++) {
      if ("文件日期:" == dts[i].textContent || '发文日期:' == dts[i].textContent) {
        a.push(dts[i]);
      }

      if ("主办部门:" == dts[i].textContent) {
        b.push(dts[i]);
      }

      if ("拟 稿 人:" == dts[i].textContent) {
        c.push(dts[i]);
      }

      if ("主送单位:" == dts[i].textContent) {
        d.push(dts[i]);
      }

      if ("抄送单位:" == dts[i].textContent) {
        e.push(dts[i]);
      }
    } //日期

    var rqs = a[0] != undefined && a[0].nextElementSibling.firstElementChild;

    if (null == rqs) {
      var rq = a[0] != undefined && a[0].nextElementSibling.textContent;
    } else {
      var rq = rqs.value;
    } //主办部门

    var zbbms = b[0] != undefined && b[0].nextElementSibling.firstElementChild;

    if (null == zbbms) {
      var zbbm = b[0] != undefined && b[0].nextElementSibling.textContent;
    } else {
      var zbbm = zbbms.value;
    }

    var Ngr = c[0] != undefined && c[0].nextElementSibling;

    var ngr = Ngr.textContent; //拟稿人

    var zsdws = d[0] != undefined && d[0].nextElementSibling.firstElementChild;

    if (null == zsdws) {
      var zsdw = d[0] != undefined && d[0].nextElementSibling.textContent;
    } else {
      var zsdw = zsdws.value;
    } //主送单位

    var csdws = e[0] != undefined && e[0].nextElementSibling.firstElementChild;

    if (null == csdws) {
      var csdw = e[0] != undefined && e[0].nextElementSibling.textContent;
    } else {
      var csdw = csdws.value;
    } //抄送单位

    var comment_table = elem.ownerDocument.querySelector("#comment_table");

    var tbodys = comment_table && comment_table.querySelector("tbody");

    if (tbodys == null) {
      var jdmc = "";
    } else {
      var trs = tbodys.querySelectorAll("tr");
      var jdmc = trs && trs[0].querySelectorAll("td")[0].textContent;
    } // 节点名称

    var yj =
    elem.ownerDocument.querySelector('textarea[name="fldYijian"]').value;

    data.content.push(qfr, zbbm, zsdw, csdw, ngr, rq, jdmc, dblx, yj); //内容end

    //附件开始

    var fujianDls =
    $(elem).find('.down_table_list').find('#down_table_list_text') &&
    $(elem).find('.down_table_list').find('#down_table_list_text').find('dl');

    if (fujianDls.length != 0) {
      fujianDls && fujianDls.map(function (j, q) {
        var obj = {};
        var typePh = $(q).find('.file_name').find('a').text();
        var typeP = typePh.indexOf('xls') > -1 == true ? 'xls' : typePh.indexOf('ppt') > -1 == true ? 'ppt' : typePh.indexOf('docx') > -1 == true ? 'docx' : '';
        obj.typeP = typeP;
        obj.text = $(q).find('.file_name').find('a').text();
        obj.time = $(q).find('.file_num').find('span').text();
        var cwin = elem.ownerDocument;
        var attachUrl = '/WebOfficehncfd/' + cwin.forms[0].fldQxxxDbName.value + '/($All)/' + cwin.forms[0].fldQXXXID.value + '/$FILE/' + $(q).find('.file_name').find('a').text();
        var url = "http://oa1.hnrl.chng.com/" + encodeURIComponent(attachUrl);
        obj.url = url;
        obj.cookies = cwin.cookie;
        data.fujian.push(obj);
      });
    } else {
      var obj = {};
      obj.typeP = '';
      obj.text = '暂无附件';
      obj.time = '';
      data.fujian.push(obj);
    } //附件完

    var liuchengTable = $(elem).find("#comment_table").find("tbody");

    if (liuchengTable.length == 0) {
      var obj = {};
      obj.text = '暂无流程';
      data.liucheng.push(obj);
    } else {
      liuchengTable && liuchengTable.map(function (d, t) {
        if (d > 0) {
          var obj = {};
          obj.text = $(t).find("td").eq(0).text().replace(/\s/g, "");
          var str = $(t).find("td").eq(1).text();
          var arr = str.split(' ');
          obj.content = arr[1];
          obj.day = arr[2] + ' ' + arr[3];
          data.liucheng.push(obj);
        }
      });
      var obj2 = {};
      obj2.num = liuchengTable.length - 2;
      data.liuchengNUM.push(obj2);
    } //流程完

    //提交流转开始

    var commitLZS = $(elem).find('.path') &&
    $(elem).find('.path').find('ul.path_btn') &&
    $(elem).find('.path').find('ul.path_btn').find('span');

    commitLZS && commitLZS.map(function (d, t) {
      var obj = {};
      obj.textC = t.textContent;
      data.commitLZ.push(obj);
    });

    if (elem.ownerDocument.querySelector('.ui_border') &&
    elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content')
    &&
    elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading')
    &&
    elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').length
    != 0) {
      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling && elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      var divs = $(iframes).find('#selectflowuser').children();
      var trees = $(iframes).find('#selectflowuser') && $(iframes).find('#selectflowuser').find('.t_root');
      divs.map(function (d, t) {
        if (d > 1 && t.style.display != 'none') {
          if ($(t).find('legend').next()[0] && $(t).find('legend').next()[0].tagName == 'p') {
            $(t).find('p').map(function (q, l) {
              var obj = {};
              obj.text = $(l).text().replace(/\√/g, "");
              obj.trueFalse = $(l).text().indexOf('√') > -1 ? 'true' : 'false';
              obj.type = 'P';
              data.selectApar.push(obj);
            });
          } else if ($(t).find('legend').next()[0] && $(t).find('legend').next()[0].tagName == 'SELECT') {
            $(t).find('option').map(function (q, l) {
              var obj = {};
              obj.text = $(l).text().replace(/\√/g, "");
              obj.trueFalse = $(l).text().indexOf('√') > -1 ? 'true' : 'false';
              obj.type = 'OPTION';
              data.selectApar.push(obj);
            });
          } else if ($(t).find('legend').next()[0] && $(t).find('legend').next()[0].tagName == 'DIV') {
            var obj = {};
            var a = [];
            var b = [];
            var c = [];
            var lx = $(t).find(".grouptype");
            data.textArr.lx.push(lx && lx.text());
            var bm = $(t).find(".grouplist") && $(t).find(".grouplist").find("span");

            if (bm.length > 1) {
              var text;
              bm.map(function (i, d) {
                text = d.textContent + "、";
                b.push(text);
              });
              data.textArr.bm.push(b);
            } else {
              data.textArr.bm.push(bm.text());
            }

            var rygroup = $(t).find('span[class="userlist groups"]') && $(t).find('span[class="userlist groups"]')[0] && $(t).find('span[class="userlist groups"]')[0].style && $(t).find('span[class="userlist groups"]')[0].style.display == "" && $(t).find('span[class="userlist groups"]').children();
            var ryuser = $(t).find('span[class="userlist users"]') && $(t).find('span[class="userlist users"]')[0] && $(t).find('span[class="userlist users"]')[0].style && $(t).find('span[class="userlist users"]')[0].style.display == "" && $(t).find('span[class="userlist users"]').children();

            if (rygroup) {
              if (rygroup && rygroup.length > 1) {
                var user;
                rygroup.map(function (i, d) {
                  var dValue = $(d).find("span");
                  dValue.map(function (index, data) {
                    user = data.textContent + "、";
                    a.push(user);
                  });
                });
                data.textArr.ry.push(a);
              } else {
                data.textArr.ry.push(rygroup && rygroup.text());
              }
            }

            if (ryuser) {
              if (ryuser && ryuser.length > 1) {
                var user;
                ryuser.map(function (i, d) {
                  user = d.textContent + "、";
                  a.push(user);
                });
                data.textArr.ry.push(a);
              } else {
                data.textArr.ry.push(ryuser && ryuser.text());
              }
            }
          }
        } else if (d == 1) {
          if ($(t).find('legend').next()[0] && $(t).find('legend').next()[0].tagName == 'SELECT') {
            $(t).find('option').map(function (q, l) {
              var obj = {};
              obj.text = $(l).text().replace(/\√/g, "");
              obj.trueFalse = $(l).text().indexOf('√') > -1 ? 'true' : 'false';
              obj.type = 'OPTION';
              data.selectApars.push(obj);
            });
          } else {
            //树结构
            //var domtree = trees.find('.t_node');
            var domtree = trees.children('.t_node');
            domtree.map(function (d, t) {
              var obj = {};
              obj.title = $(t).find('label').eq(0).text();
              obj.dis = 'block';
              obj.indx = d;
              obj.array = [];
              obj.array1 = [];
              obj.array2 = [];
              $(t).children('.title').siblings('.t_container').children('.t_leaf').map(function (q, l) {
                var obj2 = {};
                obj2.text = $(l).find('label').text();
                obj2.indx = q;
                obj2.dis = l.parentElement.parentElement.getAttribute('class').indexOf('expanded') > -1 ? 'block' : 'none';
                obj.array.push(obj2);
              });
              $(t).find('.t_node') && $(t).find('.t_node').map(function (i, v) {
                var obj3 = {};
                obj3.title = $(v).find('label').eq(0).text();
                obj3.dis = v.parentElement.parentElement.getAttribute('class').indexOf('expanded') > -1 ? 'block' : 'none';
                obj3.indx = i;
                obj.array1.push(obj3);
                $(v).find('.t_leaf').map(function (ii, vv) {
                  var obj4 = {};
                  obj4.text = $(vv).find('label').text();
                  obj4.indx = ii;
                  obj4.dis = vv.parentElement.parentElement.parentElement.parentElement.getAttribute('class').indexOf('expanded') > -1 && vv.parentElement.parentElement.getAttribute('class').indexOf('expanded') > -1 ? 'block' : 'none';
                  obj.array2.push(obj4);
                });
              });
              data.treeBar.push(obj);
            });
          }
        }
      });
    } //选择办理人，需要跨iframe获取数据

    var list = elem.ownerDocument.querySelector("#common_view_list");

    var lis = list && list.querySelectorAll("li");

    if (lis.length > 0) {
      for (var i = 0; i < lis.length; i++) {
        data.yijian.push(lis[i].querySelector("a").textContent);
      }
    } else {
      data.yijian.push('常用意见暂无数据');
    } //常用意见end

    //按钮数量（暂存、退回）start

    var release = elem.ownerDocument.querySelector(".Release");

    var lis = release && release.querySelectorAll("li");

    for (var i = 0; i < lis.length; i++) {
      if ("暂存" == lis[i].querySelector("span").textContent || "退回" == lis[i].querySelector("span").textContent) {
        data.but.push(lis[i]);
      }
    } //按钮数量（暂存、退回）end

    //退回数据start

    var loading = elem.ownerDocument.querySelector(".ui_loading");

    var iframe = loading && loading.nextElementSibling;

    var datagrid = iframe &&
    iframe.contentDocument.querySelector(".datagrid-view2");

    if (datagrid != null) {
      var trs = datagrid.querySelector('table[class="datagrid-btable"]').querySelector("tbody").querySelectorAll("tr");

      for (var i = 0; i < trs.length; i++) {
        var c = [];
        var tds = trs[i].querySelectorAll("td");

        for (var j = 0; j < tds.length; j++) {
          c.push(tds[j].textContent);
        }

        data.tuihuiTitle.push(c);
      }

      for (var j = 0; j < trs.length; j++) {
        if (trs[j].className.indexOf("datagrid-row-selected") > -1) {
          data.tuihuiTitleFlag.push(true);
        } else {
          data.tuihuiTitleFlag.push(false);
        }
      }
    } //退回数据end

    return data;
  doAction: |
    if (data.eventType == 'Liclick') {
      ysp.appMain.showLoading();
      var data = data.dataCustom;
      var commitLZS = $(elem).find('.path') && $(elem).find('.path').find('ul.path_btn') && $(elem).find('.path').find('ul.path_btn');
      commitLZS.find('a').eq(data).click();
      setTimeout(function () {
        ysp.appMain.hideLoading();
      }, 500);
    } else if (data.eventType == 'closeChiosep') {
      var iframes = elem.ownerDocument.querySelector(".ui_border") && elem.ownerDocument.querySelector(".ui_border").querySelector(".ui_title_buttons") && elem.ownerDocument.querySelector(".ui_border").querySelector(".ui_title_buttons").querySelector(".ui_close");
      iframes.click(); //关闭选人的弹框
    } else if (data.eventType == 'peopleChioseClick') {
      //选人之后的确定按钮，手动关闭和手动给select赋值
      var loading = elem.ownerDocument.querySelector(".ui_loading");
      var iframe = loading && loading.nextElementSibling;
      var datagrid = iframe && iframe.contentDocument.querySelector("#selectflowuser");

      if (datagrid != null) {
        var selectsDiv = datagrid.querySelectorAll("div") && datagrid.querySelectorAll("div")[2];
        var options = selectsDiv.querySelector("select") && selectsDiv.querySelector("select").querySelectorAll("option");

        if (options != null) {
          var aa = [];

          for (var i = 0; i < options.length; i++) {
            var selected = options[i].getAttribute("selected");

            if ("selected" == selected) {
              aa.push(i);
            }
          }
        }
      } //elem.ownerDocument.defaultView.localStorage.setItem("personNum", aa);


      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      $(iframes).find('.ui_send').click();

      if ("" != aa && aa != "null" && aa != "undefined" && aa != undefined) {
        var url = "http://oa1.hnrl.chng.com/WebOffice/home4.nsf/index.html";
        ysp.appMain.reloadPage(url);
      } //   var index;
      //   for (var i = 0; i < lis && lis.length; i++) {
      //     if (" 退出 " == lis[i].textContent) {
      //       index = i;
      //     }
      //   }
      //   elem.querySelectorAll("li") && elem.querySelectorAll("li")[index] && elem.querySelectorAll("li")[index].querySelector("a").click();
      //   var elem = elem.ownerDocument;
      //   var dialog = $(elem).find('.ui_state_lock').find('table').find('.ui_buttons').find('input').eq(1);
      //   if (dialog.val() == '不保存') {
      //     dialog.click();
      //   } //选人后手动点击关闭

    } else if (data.eventType == 'radioClick') {
      var data = data.customData;
      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      var selectflowuser = $(iframes).find('#selectflowuser').find('fieldset').eq(2);

      if (selectflowuser.children()[1].tagName == 'P') {
        var selects = selectflowuser.find('select') && selectflowuser.find('p');
      } else {
        var selects = selectflowuser.find('select') && selectflowuser.find('select').find('option')[data];
        selects.selected = true;
        selects.setAttribute('class', 'selected');
        var evt = document.createEvent('MouseEvent');
        evt.initMouseEvent('change', true, true);
        selects.dispatchEvent(evt);
      } //选人的多选

    } else if (data.eventType == 'radiosClick') {
      var data = data.customData;
      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      var selectflowuser = $(iframes).find('#selectflowuser').find('fieldset').eq(1);

      if (selectflowuser.children()[1].tagName == 'P') {
        var selects = selectflowuser.find('select') && selectflowuser.find('p');
      } else {
        var selects = selectflowuser.find('select') && selectflowuser.find('select').find('option')[data];
        selects.selected = true;
        selects.setAttribute('class', 'selected');
        var evt = document.createEvent('MouseEvent');
        evt.initMouseEvent('change', true, true);
        selects.dispatchEvent(evt);
      } //选人的多选

    } else if (data.eventType == 'flowTitle') {
      //树结构
      var data = data.customData;
      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling && elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      var trees = $(iframes).find('#selectflowuser') && $(iframes).find('#selectflowuser').find('.t_root');
      var domtree = trees.find('.t_node');
      domtree.eq(data).find('label').eq(0).find('input').click();
    } else if (data.eventType == 'flowTitleChild') {
      var data1 = data.customData.data1;
      var data2 = data.customData.data2;
      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling && elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      var trees = $(iframes).find('#selectflowuser') && $(iframes).find('#selectflowuser').find('.t_root');
      var domtree = trees.find('.t_node');
      $(domtree).eq(data2).find('.t_leaf').eq(data1).find('label').find('input').click();
    } else if (data.eventType == 'flowTitles') {
      var data = data.customData;
      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling && elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      var trees = $(iframes).find('#selectflowuser') && $(iframes).find('#selectflowuser').find('.t_root');
      var domtree = trees.children('.t_node');
      domtree.find('.t_node').eq(data).find('label').eq(0).find('input').click(); //domtree.eq(data).find('label').eq(0).find('input').click();
    } else if (data.eventType == 'flowTitleChilds') {
      var data1 = data.customData.data1;
      var data2 = data.customData.data2;
      var iframes = elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling && elem.ownerDocument.querySelector('.ui_border').querySelector('.ui_content').querySelector('.ui_loading').nextElementSibling.contentDocument.documentElement;
      var trees = $(iframes).find('#selectflowuser') && $(iframes).find('#selectflowuser').find('.t_root');
      var domtree = trees.children('.t_node');
      domtree.find('.t_node').eq(data2).find('.t_leaf').eq(data1).find('label').find('input').click(); //$(domtree).eq(data2).find('.t_leaf').eq(data1).find('label').find('input').click();
    }
    var type = data.eventType;
    if (type == "textareaChange") {
      var text = data.customData;
      elem.ownerDocument.querySelector('textarea[name="fldYijian"]').value = text;
    }
    if (type == "yijian") {
      var index = parseInt(data.customData);
      var list = elem.ownerDocument.querySelector("#common_view_list");
      var lis = list && list.querySelectorAll("li");
      lis && lis[index].querySelector("a").click();
    }
    if (type == "ZC") {
      var a = [];
      var release = elem.ownerDocument.querySelector(".Release");
      var lis = release && release.querySelectorAll("li");

      for (var i = 0; i < lis.length; i++) {
        if ("暂存" == lis[i].querySelector("span").textContent) {
          a.push(lis[i]);
        }
      }

      a && a[0].querySelector("a").click();
      var url = "http://oa1.hnrl.chng.com/WebOffice/home4.nsf/index.html";
      ysp.appMain.reloadPage(url);
    }
    if (type == "TH") {
      var a = [];
      var release = elem.ownerDocument.querySelector(".Release");
      var lis = release && release.querySelectorAll("li");

      for (var i = 0; i < lis.length; i++) {
        if ("退回" == lis[i].querySelector("span").textContent) {
          a.push(lis[i]);
        }
      }

      a && a[0].querySelector("a").click();
    }
    if (type == "THClose") {
      var ss = [];
      var ass = elem.ownerDocument.querySelector(".ui_title_buttons") && elem.ownerDocument.querySelector(".ui_title_buttons").querySelectorAll("a");

      for (var i = 0; i < ass.length; i++) {
        if ("关闭(esc键)" == ass[i].getAttribute("title")) {
          ss.push(ass[i]);
        }
      }

      ss && ss[0].click();
    }
    if (type == "THTitle") {
      var index = data.dataCustom;
      var loading = elem.ownerDocument.querySelector(".ui_loading");
      var iframe = loading && loading.nextElementSibling;
      var datagrid = iframe && iframe.contentDocument.querySelector(".datagrid-view2");

      if (datagrid != null) {
        var trs = datagrid.querySelector('table[class="datagrid-btable"]').querySelector("tbody").querySelectorAll("tr");
        trs && trs[index].click();
      }

      var dialog = elem.ownerDocument.querySelector('table[class="ui_dialog"]') && elem.ownerDocument.querySelector('table[class="ui_dialog"]').querySelector(".ui_state_highlight");
      dialog && dialog.click();
      var url = "http://oa1.hnrl.chng.com/WebOffice/home4.nsf/index.html";
      ysp.appMain.reloadPage(url);
    }
    if (data.eventType == 'fujian') {
      var url = data.dataCustom.url;
      var cookies = data.dataCustom.cookies;
      var text = data.customData.text;
      var cookieValue = cookies.split("LtpaToken=")[1];

      if (top.EAPI.isAndroid()) {
        huaneng.fujian(url, cookies, text);
      } else {
        //top.EAPI.openWindow(url + '?_ysp_filepreview=1');
        //top.EAPI.postMessageToNative("openDocument", url);
        top.EAPI.postMessageToNative("openDocument", {
          "url": url,
          "cookieName": "LtpaToken",
          "cookieValue": cookies.split("LtpaToken=")[1],
          "cookieDomain": "59.110.171.69"
        });
      }
    }
